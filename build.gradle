/*
 * This build file was auto generated by running the Gradle 'init' task
 * at '02.07.15 17:06' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'jetty'


repositories { mavenCentral() }

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.apache.commons:commons-lang3:3.4'
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"
    runtime 'javax.servlet:jstl:1.1.2'
    testCompile 'org.testng:testng:6.9.9'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

checkstyle {
    configFile = file("$rootDir/etc/checkstyle/checkstyle.xml")
}

findbugsMain {
    classes = project.fileTree(sourceSets.main.output.classesDir)
    ignoreFailures = true
    excludeFilter = file("$rootDir/etc/findbugs/excludeFilter.xml")
}

idea.project {
    jdkName = '1.8'
    languageLevel = '1.8'
    ipr {
        withXml { provider ->
            provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}